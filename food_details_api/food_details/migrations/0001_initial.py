# Generated by Django 4.0.10 on 2023-09-08 20:46

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.BooleanField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.BooleanField()),
                ("is_active", models.BooleanField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.SmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FoodDetails",
            fields=[
                (
                    "code",
                    models.DecimalField(
                        decimal_places=0,
                        max_digits=10,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("status", models.CharField(blank=True, max_length=10, null=True)),
                ("imported_t", models.DateTimeField(blank=True, null=True)),
                ("url", models.TextField(blank=True, null=True)),
                ("creator", models.TextField(blank=True, null=True)),
                ("created_t", models.IntegerField(blank=True, null=True)),
                ("last_modified_t", models.IntegerField(blank=True, null=True)),
                ("product_name", models.TextField(blank=True, null=True)),
                ("quantity", models.TextField(blank=True, null=True)),
                ("brands", models.TextField(blank=True, null=True)),
                ("categories", models.TextField(blank=True, null=True)),
                ("labels", models.TextField(blank=True, null=True)),
                ("cities", models.TextField(blank=True, null=True)),
                ("purchase_places", models.TextField(blank=True, null=True)),
                ("stores", models.TextField(blank=True, null=True)),
                ("ingredients_text", models.TextField(blank=True, null=True)),
                ("traces", models.TextField(blank=True, null=True)),
                ("serving_size", models.TextField(blank=True, null=True)),
                (
                    "serving_quantity",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=10, null=True
                    ),
                ),
                (
                    "nutriscore_score",
                    models.DecimalField(
                        blank=True, decimal_places=0, max_digits=10, null=True
                    ),
                ),
                (
                    "nutriscore_grade",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                ("main_category", models.TextField(blank=True, null=True)),
                ("image_url", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "food_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FoodTable",
            fields=[
                (
                    "code",
                    models.DecimalField(
                        decimal_places=65535,
                        max_digits=65535,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("status", models.CharField(blank=True, max_length=10, null=True)),
                ("imported_t", models.DateTimeField(blank=True, null=True)),
                ("url", models.TextField(blank=True, null=True)),
                ("creator", models.TextField(blank=True, null=True)),
                ("created_t", models.IntegerField(blank=True, null=True)),
                ("last_modified_t", models.IntegerField(blank=True, null=True)),
                ("product_name", models.TextField(blank=True, null=True)),
                ("quantity", models.TextField(blank=True, null=True)),
                ("brands", models.TextField(blank=True, null=True)),
                ("categories", models.TextField(blank=True, null=True)),
                ("labels", models.TextField(blank=True, null=True)),
                ("cities", models.TextField(blank=True, null=True)),
                ("purchase_places", models.TextField(blank=True, null=True)),
                ("stores", models.TextField(blank=True, null=True)),
                ("ingredients_text", models.TextField(blank=True, null=True)),
                ("traces", models.TextField(blank=True, null=True)),
                ("serving_size", models.TextField(blank=True, null=True)),
                ("serving_quantity", models.FloatField(blank=True, null=True)),
                (
                    "nutriscore_score",
                    models.DecimalField(
                        blank=True, decimal_places=65535, max_digits=65535, null=True
                    ),
                ),
                (
                    "nutriscore_grade",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                ("main_category", models.TextField(blank=True, null=True)),
                ("image_url", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "food_table",
                "managed": False,
            },
        ),
    ]
